{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3a3bad11",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-03-29T18:39:49.626258Z",
     "iopub.status.busy": "2025-03-29T18:39:49.625929Z",
     "iopub.status.idle": "2025-03-29T18:39:50.622519Z",
     "shell.execute_reply": "2025-03-29T18:39:50.621187Z"
    },
    "papermill": {
     "duration": 1.003277,
     "end_time": "2025-03-29T18:39:50.624275",
     "exception": false,
     "start_time": "2025-03-29T18:39:49.620998",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1000 entries, 0 to 999\n",
      "Data columns (total 10 columns):\n",
      " #   Column              Non-Null Count  Dtype \n",
      "---  ------              --------------  ----- \n",
      " 0   order_id            1000 non-null   int64 \n",
      " 1   date                1000 non-null   object\n",
      " 2   item_name           1000 non-null   object\n",
      " 3   item_type           1000 non-null   object\n",
      " 4   item_price          1000 non-null   int64 \n",
      " 5   quantity            1000 non-null   int64 \n",
      " 6   transaction_amount  1000 non-null   int64 \n",
      " 7   transaction_type    893 non-null    object\n",
      " 8   received_by         1000 non-null   object\n",
      " 9   time_of_sale        1000 non-null   object\n",
      "dtypes: int64(4), object(6)\n",
      "memory usage: 78.2+ KB\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load dataset\n",
    "df = pd.read_csv(\"/kaggle/input/fast-food-sales-report/Balaji Fast Food Sales.csv\")\n",
    "\n",
    "# Display first few rows\n",
    "df.head()\n",
    "df.info()  # Check data types and missing values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e7ae4fe7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T18:39:50.632420Z",
     "iopub.status.busy": "2025-03-29T18:39:50.632080Z",
     "iopub.status.idle": "2025-03-29T18:39:50.666921Z",
     "shell.execute_reply": "2025-03-29T18:39:50.665858Z"
    },
    "papermill": {
     "duration": 0.040624,
     "end_time": "2025-03-29T18:39:50.668660",
     "exception": false,
     "start_time": "2025-03-29T18:39:50.628036",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>item_price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>transaction_amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>500.500000</td>\n",
       "      <td>33.315000</td>\n",
       "      <td>8.162000</td>\n",
       "      <td>275.230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>288.819436</td>\n",
       "      <td>14.921744</td>\n",
       "      <td>4.413075</td>\n",
       "      <td>204.402979</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>20.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>250.750000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>120.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>500.500000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>240.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>750.250000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>360.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1000.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>900.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          order_id   item_price     quantity  transaction_amount\n",
       "count  1000.000000  1000.000000  1000.000000         1000.000000\n",
       "mean    500.500000    33.315000     8.162000          275.230000\n",
       "std     288.819436    14.921744     4.413075          204.402979\n",
       "min       1.000000    20.000000     1.000000           20.000000\n",
       "25%     250.750000    20.000000     4.000000          120.000000\n",
       "50%     500.500000    25.000000     8.000000          240.000000\n",
       "75%     750.250000    50.000000    12.000000          360.000000\n",
       "max    1000.000000    60.000000    15.000000          900.000000"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "bc1a077b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T18:39:50.676934Z",
     "iopub.status.busy": "2025-03-29T18:39:50.676608Z",
     "iopub.status.idle": "2025-03-29T18:39:50.683773Z",
     "shell.execute_reply": "2025-03-29T18:39:50.682939Z"
    },
    "papermill": {
     "duration": 0.012949,
     "end_time": "2025-03-29T18:39:50.685317",
     "exception": false,
     "start_time": "2025-03-29T18:39:50.672368",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "order_id                0\n",
       "date                    0\n",
       "item_name               0\n",
       "item_type               0\n",
       "item_price              0\n",
       "quantity                0\n",
       "transaction_amount      0\n",
       "transaction_type      107\n",
       "received_by             0\n",
       "time_of_sale            0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "21caa63a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T18:39:50.693687Z",
     "iopub.status.busy": "2025-03-29T18:39:50.693331Z",
     "iopub.status.idle": "2025-03-29T18:39:50.700937Z",
     "shell.execute_reply": "2025-03-29T18:39:50.699965Z"
    },
    "papermill": {
     "duration": 0.013483,
     "end_time": "2025-03-29T18:39:50.702537",
     "exception": false,
     "start_time": "2025-03-29T18:39:50.689054",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "order_id              500.500\n",
       "item_price             33.315\n",
       "quantity                8.162\n",
       "transaction_amount    275.230\n",
       "dtype: float64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.select_dtypes(include=['number']).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "6f27d6cf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T18:39:50.711241Z",
     "iopub.status.busy": "2025-03-29T18:39:50.710903Z",
     "iopub.status.idle": "2025-03-29T18:39:50.724034Z",
     "shell.execute_reply": "2025-03-29T18:39:50.722903Z"
    },
    "papermill": {
     "duration": 0.019654,
     "end_time": "2025-03-29T18:39:50.725997",
     "exception": false,
     "start_time": "2025-03-29T18:39:50.706343",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['order_id', 'date', 'item_name', 'item_type', 'item_price', 'quantity',\n",
      "       'transaction_amount', 'transaction_type', 'received_by',\n",
      "       'time_of_sale'],\n",
      "      dtype='object')\n",
      "item_name\n",
      "Cold coffee        1361\n",
      "Sugarcane juice    1278\n",
      "Panipuri           1226\n",
      "Frankie            1150\n",
      "Sandwich           1097\n",
      "Aalopuri           1044\n",
      "Vadapav            1006\n",
      "Name: quantity, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load your dataset (make sure to use the correct file path)\n",
    "df = pd.read_csv(\"/kaggle/input/fast-food-sales-report/Balaji Fast Food Sales.csv\")\n",
    "\n",
    "df.columns = df.columns.str.strip().str.lower()\n",
    "\n",
    "print(df.columns)\n",
    "\n",
    "# Ensure the correct column names are used\n",
    "if \"item_name\" in df.columns and \"quantity\" in df.columns:\n",
    "    top_products = df.groupby(\"item_name\")[\"quantity\"].sum().sort_values(ascending=False)\n",
    "    \n",
    "    print(top_products)\n",
    "else:\n",
    "    print(\"Error: Column names do not match. Please check the dataset.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d9e0bd77",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T18:39:50.735212Z",
     "iopub.status.busy": "2025-03-29T18:39:50.734883Z",
     "iopub.status.idle": "2025-03-29T18:39:50.755729Z",
     "shell.execute_reply": "2025-03-29T18:39:50.754514Z"
    },
    "papermill": {
     "duration": 0.027462,
     "end_time": "2025-03-29T18:39:50.757665",
     "exception": false,
     "start_time": "2025-03-29T18:39:50.730203",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Least Selling Items:\n",
      "     order_id        date item_name item_type  item_price  quantity  \\\n",
      "807       808   9/21/2022  Panipuri  Fastfood          20         1   \n",
      "714       715  04-12-2022  Sandwich  Fastfood          60         1   \n",
      "806       807   6/13/2022   Frankie  Fastfood          50         1   \n",
      "617       618  04-08-2022   Frankie  Fastfood          50         1   \n",
      "545       546  07-09-2022  Aalopuri  Fastfood          20         1   \n",
      "..        ...         ...       ...       ...         ...       ...   \n",
      "409       410  11/23/2022  Aalopuri  Fastfood          20        15   \n",
      "640       641  02-09-2023   Vadapav  Fastfood          20        15   \n",
      "639       640  01-04-2023  Sandwich  Fastfood          60        15   \n",
      "634       635  02-06-2023   Vadapav  Fastfood          20        15   \n",
      "721       722   9/14/2022   Vadapav  Fastfood          20        15   \n",
      "\n",
      "     transaction_amount transaction_type received_by time_of_sale  \n",
      "807                  20           Online         Mr.      Morning  \n",
      "714                  60           Online         Mr.      Morning  \n",
      "806                  50           Online        Mrs.     Midnight  \n",
      "617                  50           Online         Mr.      Evening  \n",
      "545                  20             Cash        Mrs.     Midnight  \n",
      "..                  ...              ...         ...          ...  \n",
      "409                 300           Online         Mr.    Afternoon  \n",
      "640                 300             Cash         Mr.    Afternoon  \n",
      "639                 900           Online         Mr.        Night  \n",
      "634                 300           Online        Mrs.        Night  \n",
      "721                 300              NaN         Mr.     Midnight  \n",
      "\n",
      "[1000 rows x 10 columns]\n",
      "\n",
      "Least Revenue Items:\n",
      "     order_id        date item_name item_type  item_price  quantity  \\\n",
      "560       561   6/13/2022  Panipuri  Fastfood          20         1   \n",
      "347       348   9/19/2022   Vadapav  Fastfood          20         1   \n",
      "807       808   9/21/2022  Panipuri  Fastfood          20         1   \n",
      "390       391   4/21/2022  Aalopuri  Fastfood          20         1   \n",
      "126       127  12-03-2022  Aalopuri  Fastfood          20         1   \n",
      "..        ...         ...       ...       ...         ...       ...   \n",
      "491       492  07-11-2022  Sandwich  Fastfood          60        15   \n",
      "585       586   5/22/2022  Sandwich  Fastfood          60        15   \n",
      "571       572  04-02-2022  Sandwich  Fastfood          60        15   \n",
      "624       625   6/17/2022  Sandwich  Fastfood          60        15   \n",
      "893       894   3/19/2023  Sandwich  Fastfood          60        15   \n",
      "\n",
      "     transaction_amount transaction_type received_by time_of_sale  \n",
      "560                  20             Cash        Mrs.     Midnight  \n",
      "347                  20           Online        Mrs.     Midnight  \n",
      "807                  20           Online         Mr.      Morning  \n",
      "390                  20           Online        Mrs.        Night  \n",
      "126                  20              NaN        Mrs.      Morning  \n",
      "..                  ...              ...         ...          ...  \n",
      "491                 900             Cash         Mr.    Afternoon  \n",
      "585                 900           Online         Mr.        Night  \n",
      "571                 900             Cash         Mr.    Afternoon  \n",
      "624                 900           Online         Mr.      Morning  \n",
      "893                 900             Cash         Mr.      Morning  \n",
      "\n",
      "[1000 rows x 10 columns]\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load the data from the CSV file\n",
    "try:\n",
    "    sales_data = pd.read_csv(\"/kaggle/input/fast-food-sales-report/Balaji Fast Food Sales.csv\")  # Replace \"sales_data.csv\" with your file path\n",
    "except FileNotFoundError:\n",
    "    print(\"Error: sales_data.csv not found. Please check the file path.\")\n",
    "    exit()\n",
    "\n",
    "# Now, perform the sorting operations\n",
    "least_selling_items = sales_data.sort_values(by='quantity', ascending=True)\n",
    "least_revenue_items = sales_data.sort_values(by='transaction_amount', ascending=True)\n",
    "\n",
    "# Display the results\n",
    "print(\"Least Selling Items:\")\n",
    "print(least_selling_items)\n",
    "\n",
    "print(\"\\nLeast Revenue Items:\")\n",
    "print(least_revenue_items)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "9a00d267",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T18:39:50.766895Z",
     "iopub.status.busy": "2025-03-29T18:39:50.766514Z",
     "iopub.status.idle": "2025-03-29T18:39:50.782295Z",
     "shell.execute_reply": "2025-03-29T18:39:50.780923Z"
    },
    "papermill": {
     "duration": 0.022305,
     "end_time": "2025-03-29T18:39:50.784030",
     "exception": false,
     "start_time": "2025-03-29T18:39:50.761725",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sales by Time Period:\n",
      "time_of_sale\n",
      "Afternoon    56345\n",
      "Evening      52355\n",
      "Midnight     50725\n",
      "Morning      53730\n",
      "Night        62075\n",
      "Name: transaction_amount, dtype: int64\n",
      "\n",
      "Best Time for Sales:\n",
      "Time: Night, Total Sales: 62075\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load your sales data (replace 'sales_data.csv' with your file)\n",
    "df = pd.read_csv('/kaggle/input/fast-food-sales-report/Balaji Fast Food Sales.csv')\n",
    "\n",
    "# Assuming your time column is called 'time_of_sale'\n",
    "# Clean the time column (replace with NaN if not a valid time period)\n",
    "time_periods = ['Morning', 'Afternoon', 'Evening', 'Night', 'Midnight']\n",
    "df['time_of_sale'] = df['time_of_sale'].apply(lambda x: x if x in time_periods else np.nan)\n",
    "\n",
    "# Drop rows with NaN in 'time_of_sale'\n",
    "df = df.dropna(subset=['time_of_sale'])\n",
    "\n",
    "# Group by time period and calculate total sales\n",
    "sales_by_period = df.groupby('time_of_sale')['transaction_amount'].sum()\n",
    "\n",
    "# Find the best time for sales\n",
    "best_time = sales_by_period.idxmax()\n",
    "best_sales = sales_by_period.max()\n",
    "\n",
    "# Display results\n",
    "print(\"Sales by Time Period:\")\n",
    "print(sales_by_period)\n",
    "print(\"\\nBest Time for Sales:\")\n",
    "print(f\"Time: {best_time}, Total Sales: {best_sales}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e9104795",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T18:39:50.794213Z",
     "iopub.status.busy": "2025-03-29T18:39:50.793853Z",
     "iopub.status.idle": "2025-03-29T18:39:50.821182Z",
     "shell.execute_reply": "2025-03-29T18:39:50.820071Z"
    },
    "papermill": {
     "duration": 0.035167,
     "end_time": "2025-03-29T18:39:50.823354",
     "exception": false,
     "start_time": "2025-03-29T18:39:50.788187",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unique values in 'date' column: ['07-03-2022' '8/23/2022' '11/20/2022' '02-03-2023' '10-02-2022'\n",
      " '11/14/2022' '05-03-2022' '12/22/2022' '06-10-2022' '9/16/2022'\n",
      " '12-01-2022' '07-12-2022' '11/25/2022' '4/14/2022' '10/16/2022'\n",
      " '11-05-2022' '8/22/2022' '9/15/2022' '12/21/2022' '10-04-2022'\n",
      " '5/26/2022' '02-11-2023' '8/31/2022' '8/18/2022' '10-12-2022'\n",
      " '01-06-2023' '02-10-2023' '1/28/2023' '9/14/2022' '05-06-2022'\n",
      " '02-05-2023' '02-04-2023' '5/22/2022' '07-02-2022' '01-05-2023'\n",
      " '03-08-2023' '5/14/2022' '11/13/2022' '05-09-2022' '8/28/2022'\n",
      " '8/15/2022' '05-07-2022' '07-10-2022' '2/23/2023' '11-06-2022'\n",
      " '11-02-2022' '5/16/2022' '3/16/2023' '7/26/2022' '12/28/2022'\n",
      " '11/23/2022' '08-04-2022' '07-01-2022' '06-11-2022' '12/25/2022'\n",
      " '10/17/2022' '12-09-2022' '7/25/2022' '04-05-2022' '5/15/2022'\n",
      " '12/17/2022' '01-10-2023' '12-05-2022' '03-09-2023' '7/29/2022'\n",
      " '02-02-2023' '8/17/2022' '10-01-2022' '5/24/2022' '11/19/2022'\n",
      " '7/17/2022' '03-03-2023' '8/19/2022' '5/29/2022' '07-07-2022'\n",
      " '12/23/2022' '10/29/2022' '3/22/2023' '5/13/2022' '05-12-2022'\n",
      " '3/29/2023' '12/24/2022' '09-11-2022' '05-08-2022' '3/26/2023'\n",
      " '3/13/2023' '3/14/2023' '10/27/2022' '1/25/2023' '2/25/2023' '02-07-2023'\n",
      " '08-06-2022' '08-08-2022' '11/16/2022' '09-04-2022' '2/24/2023'\n",
      " '12-12-2022' '8/14/2022' '01-12-2023' '8/26/2022' '07-06-2022'\n",
      " '4/24/2022' '06-09-2022' '10/14/2022' '04-10-2022' '04-08-2022'\n",
      " '12-03-2022' '08-07-2022' '10/19/2022' '1/19/2023' '12/20/2022'\n",
      " '1/14/2023' '8/24/2022' '3/19/2023' '09-01-2022' '2/26/2023' '06-12-2022'\n",
      " '6/15/2022' '12/30/2022' '9/18/2022' '11/17/2022' '10-09-2022'\n",
      " '10/28/2022' '5/17/2022' '08-09-2022' '1/30/2023' '10/24/2022'\n",
      " '7/21/2022' '12/13/2022' '3/25/2023' '10-03-2022' '7/23/2022'\n",
      " '08-10-2022' '06-01-2022' '4/19/2022' '6/20/2022' '2/13/2023'\n",
      " '03-02-2023' '8/27/2022' '1/20/2023' '09-03-2022' '01-03-2023'\n",
      " '1/13/2023' '3/15/2023' '10-11-2022' '02-08-2023' '4/26/2022' '5/20/2022'\n",
      " '10/26/2022' '12/15/2022' '4/23/2022' '6/25/2022' '11-08-2022'\n",
      " '02-01-2023' '6/30/2022' '9/21/2022' '04-11-2022' '7/27/2022' '2/20/2023'\n",
      " '12-04-2022' '01-02-2023' '4/18/2022' '05-05-2022' '9/29/2022'\n",
      " '12-10-2022' '03-07-2023' '3/23/2023' '4/16/2022' '7/31/2022'\n",
      " '11/29/2022' '6/26/2022' '12-11-2022' '06-06-2022' '11-12-2022'\n",
      " '11/22/2022' '4/17/2022' '11/15/2022' '6/18/2022' '4/30/2022'\n",
      " '09-06-2022' '11/18/2022' '09-10-2022' '01-11-2023' '03-05-2023'\n",
      " '6/19/2022' '7/18/2022' '09-07-2022' '01-04-2023' '9/30/2022'\n",
      " '12-08-2022' '1/29/2023' '6/28/2022' '12/14/2022' '11/28/2022'\n",
      " '1/27/2023' '1/16/2023' '4/21/2022' '9/23/2022' '02-06-2023' '7/19/2022'\n",
      " '7/22/2022' '6/27/2022' '3/21/2023' '5/28/2022' '4/25/2022' '2/27/2023'\n",
      " '03-10-2023' '3/18/2023' '12/29/2022' '6/16/2022' '9/22/2022' '8/21/2022'\n",
      " '2/17/2023' '10/30/2022' '04-04-2022' '10/15/2022' '2/16/2023'\n",
      " '06-02-2022' '03-11-2023' '1/18/2023' '1/31/2023' '6/24/2022' '9/19/2022'\n",
      " '07-08-2022' '5/25/2022' '5/18/2022' '10-06-2022' '11/30/2022'\n",
      " '10/18/2022' '7/24/2022' '2/15/2023' '10/20/2022' '8/16/2022'\n",
      " '10/22/2022' '3/17/2023' '04-03-2022' '10/31/2022' '03-04-2023'\n",
      " '9/25/2022' '11/26/2022' '10/13/2022' '10-05-2022' '1/21/2023'\n",
      " '08-05-2022' '10-08-2022' '3/24/2023' '08-02-2022' '10/21/2022'\n",
      " '5/21/2022' '3/27/2023' '5/27/2022' '09-05-2022' '9/28/2022' '1/17/2023'\n",
      " '09-09-2022' '03-01-2023' '12/31/2022' '09-12-2022' '06-08-2022'\n",
      " '1/15/2023' '09-08-2022' '12/27/2022' '4/27/2022' '2/14/2023'\n",
      " '12/26/2022' '5/31/2022' '07-11-2022' '11-07-2022' '11-04-2022'\n",
      " '02-12-2023' '7/16/2022' '11-03-2022' '05-01-2022' '05-04-2022'\n",
      " '07-04-2022' '06-05-2022' '7/30/2022' '01-01-2023' '07-09-2022'\n",
      " '4/15/2022' '11-11-2022' '6/13/2022' '9/27/2022' '04-02-2022'\n",
      " '04-09-2022' '8/25/2022' '2/22/2023' '11-01-2022' '2/28/2023'\n",
      " '12/19/2022' '7/15/2022' '6/17/2022' '6/22/2022' '05-02-2022' '8/20/2022'\n",
      " '1/26/2023' '02-09-2023' '8/30/2022' '04-07-2022' '5/30/2022'\n",
      " '10-10-2022' '05-11-2022' '07-05-2022' '11/24/2022' '9/17/2022'\n",
      " '5/19/2022' '5/23/2022' '4/20/2022' '08-12-2022' '12/18/2022' '8/13/2022'\n",
      " '04-01-2022' '4/22/2022' '10-07-2022' '12/16/2022' '12-02-2022'\n",
      " '04-12-2022' '05-10-2022' '08-03-2022' '9/20/2022' '11-09-2022'\n",
      " '06-04-2022' '06-07-2022' '3/20/2023' '10/23/2022' '11/27/2022'\n",
      " '4/29/2022' '12-07-2022' '7/20/2022' '4/28/2022' '1/23/2023' '08-01-2022'\n",
      " '2/18/2023' '11-10-2022' '1/24/2023' '7/14/2022' '7/13/2022' '03-12-2023'\n",
      " '03-06-2023' '2/21/2023' '2/19/2023' '01-07-2023' '9/24/2022' '6/29/2022'\n",
      " '11/21/2022' '1/22/2023' '3/30/2023' '6/14/2022']\n",
      "🔹 Sales by day of the week:\n",
      "         Day  transaction_amount\n",
      "3     Sunday               18530\n",
      "4   Thursday               17410\n",
      "0     Friday               16070\n",
      "5    Tuesday               15870\n",
      "1     Monday               15595\n",
      "2   Saturday               14140\n",
      "6  Wednesday               14100\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "def analyze_sales_by_day(df, date_column='date', sales_column='transaction_amount'):\n",
    "    try:\n",
    "        df_copy = df.copy()\n",
    "        print(\"Unique values in 'date' column:\", df_copy[date_column].unique()) # Add this line\n",
    "        df_copy[date_column] = pd.to_datetime(df_copy[date_column], errors='coerce')\n",
    "\n",
    "        df_copy = df_copy.dropna(subset=[date_column])\n",
    "\n",
    "        df_copy['Day'] = df_copy[date_column].dt.day_name()\n",
    "\n",
    "        daily_sales = df_copy.groupby('Day')[sales_column].sum().reset_index()\n",
    "\n",
    "        daily_sales = daily_sales.sort_values(by=sales_column, ascending=False)\n",
    "\n",
    "        return daily_sales\n",
    "\n",
    "    except KeyError as e:\n",
    "        print(f\"Error: Column '{e}' not found in the DataFrame. Please check column names.\")\n",
    "        return None\n",
    "    except AttributeError as e:\n",
    "        print(f\"Attribute Error: {e}\")\n",
    "        return None\n",
    "    except Exception as e:\n",
    "        print(f\"An unexpected error occurred: {e}\")\n",
    "        return None\n",
    "\n",
    "file_path = '/kaggle/input/fast-food-sales-report/Balaji Fast Food Sales.csv'\n",
    "try:\n",
    "    df = pd.read_csv(file_path)\n",
    "except FileNotFoundError:\n",
    "    print(f\"Error: File not found at {file_path}\")\n",
    "    exit()\n",
    "\n",
    "sales_by_day = analyze_sales_by_day(df)\n",
    "\n",
    "if sales_by_day is not None:\n",
    "    print(\"🔹 Sales by day of the week:\")\n",
    "    print(sales_by_day)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e08fe561",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T18:39:50.833105Z",
     "iopub.status.busy": "2025-03-29T18:39:50.832743Z",
     "iopub.status.idle": "2025-03-29T18:39:58.847329Z",
     "shell.execute_reply": "2025-03-29T18:39:58.846216Z"
    },
    "papermill": {
     "duration": 8.021617,
     "end_time": "2025-03-29T18:39:58.849197",
     "exception": false,
     "start_time": "2025-03-29T18:39:50.827580",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Seaborn updated successfully.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1400x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import subprocess\n",
    "\n",
    "def update_seaborn():\n",
    "    \"\"\"Updates Seaborn to the latest version.\"\"\"\n",
    "    try:\n",
    "        subprocess.check_call([\"pip\", \"install\", \"--upgrade\", \"seaborn\"])\n",
    "        print(\"Seaborn updated successfully.\")\n",
    "    except subprocess.CalledProcessError as e:\n",
    "        print(f\"Error updating Seaborn: {e}\")\n",
    "\n",
    "update_seaborn()\n",
    "\n",
    "# Now, run your sales analysis code again\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import numpy as np\n",
    "\n",
    "def analyze_monthly_sales(df, date_column='date', sales_column='transaction_amount'):\n",
    "    try:\n",
    "        df_copy = df.copy()\n",
    "        df_copy[date_column] = pd.to_datetime(df_copy[date_column], errors='coerce')\n",
    "        df_copy = df_copy.dropna(subset=[date_column])\n",
    "\n",
    "        df_copy['MonthYear'] = df_copy[date_column].dt.strftime('%B %Y')\n",
    "\n",
    "        monthly_sales = df_copy.groupby('MonthYear')[sales_column].sum().reset_index()\n",
    "\n",
    "        # Convert inf values to NaN before plotting (recommended)\n",
    "        monthly_sales[sales_column] = monthly_sales[sales_column].replace([np.inf, -np.inf], np.nan)\n",
    "        monthly_sales = monthly_sales.dropna(subset=[sales_column])\n",
    "\n",
    "        # Create a line plot using seaborn\n",
    "        plt.figure(figsize=(14, 7))\n",
    "        sns.lineplot(x='MonthYear', y=sales_column, data=monthly_sales)\n",
    "        plt.title('Monthly Sales Trend')\n",
    "        plt.xlabel('Month-Year')\n",
    "        plt.ylabel('Total Sales')\n",
    "        plt.xticks(rotation=45, ha='right')\n",
    "        plt.tight_layout()\n",
    "        plt.show()\n",
    "\n",
    "        return None\n",
    "\n",
    "    except KeyError as e:\n",
    "        print(f\"Error: Column '{e}' not found in the DataFrame. Please check column names.\")\n",
    "        return None\n",
    "    except AttributeError as e:\n",
    "        print(f\"Attribute Error: {e}\")\n",
    "        return None\n",
    "    except Exception as e:\n",
    "        print(f\"An unexpected error occurred: {e}\")\n",
    "        return None\n",
    "\n",
    "file_path = '/kaggle/input/fast-food-sales-report/Balaji Fast Food Sales.csv'\n",
    "try:\n",
    "    df = pd.read_csv(file_path)\n",
    "except FileNotFoundError:\n",
    "    print(f\"Error: File not found at {file_path}\")\n",
    "    exit()\n",
    "\n",
    "analyze_monthly_sales(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "bc4cc139",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T18:39:58.864736Z",
     "iopub.status.busy": "2025-03-29T18:39:58.864295Z",
     "iopub.status.idle": "2025-03-29T18:39:58.877518Z",
     "shell.execute_reply": "2025-03-29T18:39:58.876319Z"
    },
    "papermill": {
     "duration": 0.022863,
     "end_time": "2025-03-29T18:39:58.879255",
     "exception": false,
     "start_time": "2025-03-29T18:39:58.856392",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average Order Value (AOV): $275.23\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "def calculate_aov(df, order_id_column='order_id', sales_column='transaction_amount'):\n",
    "    \"\"\"\n",
    "    Calculates the Average Order Value (AOV).\n",
    "\n",
    "    Args:\n",
    "        df (pd.DataFrame): The DataFrame containing sales data.\n",
    "        order_id_column (str): The name of the order ID column.\n",
    "        sales_column (str): The name of the sales column.\n",
    "\n",
    "    Returns:\n",
    "        float: The AOV, or None if an error occurs.\n",
    "    \"\"\"\n",
    "    try:\n",
    "        # Calculate total revenue\n",
    "        total_revenue = df[sales_column].sum()\n",
    "\n",
    "        # Calculate number of unique orders\n",
    "        num_orders = df[order_id_column].nunique()\n",
    "\n",
    "        # Calculate AOV\n",
    "        aov = total_revenue / num_orders\n",
    "\n",
    "        return aov\n",
    "\n",
    "    except KeyError as e:\n",
    "        print(f\"Error: Column '{e}' not found in the DataFrame. Please check column names.\")\n",
    "        return None\n",
    "    except ZeroDivisionError:\n",
    "        print(\"Error: No orders found. AOV cannot be calculated.\")\n",
    "        return None\n",
    "    except Exception as e:\n",
    "        print(f\"An unexpected error occurred: {e}\")\n",
    "        return None\n",
    "\n",
    "# Load your sales data\n",
    "file_path = '/kaggle/input/fast-food-sales-report/Balaji Fast Food Sales.csv'\n",
    "try:\n",
    "    df = pd.read_csv(file_path)\n",
    "except FileNotFoundError:\n",
    "    print(f\"Error: File not found at {file_path}\")\n",
    "    exit()\n",
    "\n",
    "# Calculate AOV\n",
    "aov = calculate_aov(df)\n",
    "\n",
    "# Display the result\n",
    "if aov is not None:\n",
    "    print(f\"Average Order Value (AOV): ${aov:.2f}\")  # Format to 2 decimal places"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "168c96bf",
   "metadata": {
    "papermill": {
     "duration": 0.006065,
     "end_time": "2025-03-29T18:39:58.891871",
     "exception": false,
     "start_time": "2025-03-29T18:39:58.885806",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 3953791,
     "sourceId": 6902974,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30918,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 12.802152,
   "end_time": "2025-03-29T18:39:59.619002",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-03-29T18:39:46.816850",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
